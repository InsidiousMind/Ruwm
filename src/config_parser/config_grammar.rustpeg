use super::*;

end ->  () 
    = "\n"
// Symbol/Action definitions
symbol -> String
    = s:$([a-zA-Z]+) { s.to_string() }

action -> String
    = a:$([a-zA-Z]+) { a.to_string() }

symbols -> Vec<String>
    = (symbol)*

actions -> Vec<String>
    = (action)*

// keyword definitions
bindsym -> ()
    = "bindsym"i

floating_mod -> ()
    = "floating_mod"i

// Combination Definitions

/* BindSym, all we care about is what symbols 
 * are associated with which actions
 */
bindsym_combo -> super::Config
    = k:bindsym " " s:symbols " " a:actions e:end { super::Config::BindSym(s,a) }

floating_mod_combo -> super::Config
    = k:floating_mod s:symbol e:end { super::Config::FloatingMod(s) }

// Element Definitions
#[pub]
content -> Vec<super::Config>
    = (bindsym_combo / floating_mod_combo)*
